// ูุธุงู ุงูุฃูุบุงุฒ
class PuzzleSystem {
    constructor() {
        this.currentPuzzle = 1;
        this.puzzles = {
            1: {
                title: "ุงููุบุฒ ุงูุฃูู: ุงูุดููุฑุฉ ุงูุฑูููุฉ",
                question: `ุฃูุงูู ุณูุณูุฉ ุฃุฑูุงู ุบุงูุถุฉ:<br><br>
                <div class="number-sequence">
                    <span class="number">2</span>
                    <span class="number">4</span>
                    <span class="number">8</span>
                    <span class="number">16</span>
                    <span class="number">?</span>
                </div>
                <br>ูุง ูู ุงูุฑูู ุงูุชุงูู ูู ูุฐู ุงูุณูุณูุฉุ`,
                solution: "32",
                type: "math",
                explanation: "ูู ุฑูู ูุณุงูู ุถุนู ุงูุฑูู ุงูุณุงุจู (2ร2=4, 4ร2=8, 8ร2=16, 16ร2=32)",
                hints: [
                    "ุงูุธุฑ ุฅูู ุงูุนูุงูุฉ ุจูู ูู ุฑูู ูุงูุฑูู ุงูุฐู ูุณุจูู",
                    "ุฌุฑุจ ุนูููุฉ ุญุณุงุจูุฉ ุจุณูุทุฉ ุจูู ุงูุฃุฑูุงู ุงููุชุชุงููุฉ",
                    "ูุง ูู ุงูุนูููุฉ ุงูุชู ุชุญูู 2 ุฅูู 4ุ ู 4 ุฅูู 8ุ",
                    "ูู ูุงุญุธุช ุฃู ูู ุฑูู ูู ุถุนู ุงูุฑูู ุงูุณุงุจูุ",
                    "ุงูุฅุฌุงุจุฉ: 32 (16 ร 2 = 32)"
                ]
            },
            2: {
                title: "ุงููุบุฒ ุงูุซุงูู: ุงููููุงุช ุงููุชูุงุทุนุฉ",
                question: `ุญู ูุฐุง ุงููุบุฒ ุงููุบูู:<br><br>
                <div class="word-puzzle">
                    <div>ุฃูู ุงูุดูุก โ _ _ ู</div>
                    <div>ูุณุท ุงูุจุญุฑ โ _ ู ุณ _</div>
                    <div>ุขุฎุฑ ุงูููู โ _ _ ุฑ</div>
                    <br>ูุง ูู ุงููููุฉ ุงููุดุชุฑูุฉุ`,
                solution: "ููุฑ",
                type: "word",
                explanation: "ุฃูู ุงูุดูุก: ููุฑุ ูุณุท ุงูุจุญุฑ: ููุฑุณุ ุขุฎุฑ ุงูููู: ููุฑ",
                hints: [
                    "ุฑูุฒ ุนูู ุงูุญุฑูู ุงููุดุชุฑูุฉ ูู ุงููููุงุช ุงูุซูุงุซ",
                    "ุงููููุฉ ุงููุทููุจุฉ ุชุชููู ูู 3 ุฃุญุฑู",
                    "ูู ูููุฉ ุชุนูู ุงูุถูุก",
                    "ุชุจุฏุฃ ุจุญุฑู ุงูููู",
                    "ุงูุฅุฌุงุจุฉ: ููุฑ"
                ]
            },
            3: {
                title: "ุงูููุงุฆู: ุงูููุท ุงูุจุตุฑู",
                question: `ูุง ูู ุงูููุท ูู ูุฐู ุงูุฃุดูุงูุ<br><br>
                <div class="shapes-pattern">
                    <div class="shape">โฒ</div>
                    <div class="shape">โผ</div>
                    <div class="shape">โ</div>
                    <div class="shape">?</div>
                </div>`,
                solution: "circle",
                type: "pattern",
                explanation: "ุงูููุท: ูุซูุซ ูุฃุนููุ ูุซูุซ ูุฃุณููุ ูุนููุ ุซู ุฏุงุฆุฑุฉ (ุฃุดูุงู ููุฏุณูุฉ ุฃุณุงุณูุฉ)",
                hints: [
                    "ุงูุธุฑ ุฅูู ุชุชุงุจุน ุงูุฃุดูุงู ุงูููุฏุณูุฉ",
                    "ูุฐู ุฃุดูุงู ููุฏุณูุฉ ุฃุณุงุณูุฉ",
                    "ุงููุซูุซ ุจุฃูุฌู ูุฎุชููุฉุ ุซู ูุนููุ ุซู...",
                    "ูุง ูู ุงูุดูู ุงูููุฏุณู ุงูุฃุณุงุณู ุงูุชุงููุ",
                    "ุงูุฅุฌุงุจุฉ: circle"
                ]
            }
        };
    }

    // ุนุฑุถ ุงููุบุฒ ุงูุญุงูู
    displayPuzzle(puzzleNumber) {
        const puzzle = this.puzzles[puzzleNumber];
        if (!puzzle) return this.displayEnding();
        
        return `
            <div class="puzzle-header">
                <h2>${puzzle.title}</h2>
            </div>
            
            <div class="puzzle-question">
                <p>${puzzle.question}</p>
            </div>
            
            <div class="puzzle-interaction">
                <input type="text" id="puzzleAnswer" placeholder="ุงูุชุจ ุฅุฌุงุจุชู ููุง...">
                <button onclick="checkPuzzleAnswer()">ุชุญูู ูู ุงูุฅุฌุงุจุฉ</button>
                <button onclick="askForHint()">ุงุทูุจ ุชูููุญุงู</button>
            </div>
            
            <div class="ai-feedback" id="aiFeedback"></div>
            
            ${puzzleNumber === 1 ? `
            <div class="puzzle-explanation" style="margin-top: 20px; font-size: 0.9em; color: #00f0ff; opacity: 0.8;">
                ๐ก ุชูููุญ: ุงูุฃุฑูุงู ุชุชุฒุงูุฏ ุจููุท ุฑูุงุถู ููุชุธู
            </div>
            ` : ''}
        `;
    }

    // ุงูุญุตูู ุนูู ุชูููุญ
    getHint(puzzleNumber, hintLevel) {
        const puzzle = this.puzzles[puzzleNumber];
        if (puzzle && puzzle.hints) {
            return hintLevel < puzzle.hints.length ? puzzle.hints[hintLevel] : puzzle.hints[puzzle.hints.length - 1];
        }
        return "ุญุงูู ุงูุชูููุฑ ุจุทุฑููุฉ ูุฎุชููุฉ...";
    }

    // ุงูุชุญูู ูู ุงูุฅุฌุงุจุฉ
    checkAnswer(answer, puzzleNumber) {
        const puzzle = this.puzzles[puzzleNumber];
        if (!puzzle) return false;
        
        // ุฌุนู ุงูุชุญูู ุฃูุซุฑ ูุฑููุฉ
        const userAnswer = answer.toLowerCase().trim();
        const correctAnswer = puzzle.solution.toLowerCase();
        
        return userAnswer === correctAnswer || 
               userAnswer === this.translateToArabic(correctAnswer) ||
               userAnswer === this.translateToEnglish(correctAnswer);
    }

    translateToArabic(word) {
        const translations = {
            '32': 'ุงุซูุงู ูุซูุงุซูู',
            'nur': 'ููุฑ',
            'noor': 'ููุฑ', 
            'circle': 'ุฏุงุฆุฑุฉ',
            'fibonacci': 'ููุจููุงุชุดู'
        };
        return translations[word.toLowerCase()] || word;
    }

    translateToEnglish(word) {
        const translations = {
            'ุงุซูุงู ูุซูุงุซูู': '32',
            'ููุฑ': 'nur',
            'ุฏุงุฆุฑุฉ': 'circle',
            'ููุจููุงุชุดู': 'fibonacci'
        };
        return translations[word] || word;
    }

    // ููุงูุฉ ุงููุนุจุฉ
    displayEnding() {
        return `
            <div class="ending-screen">
                <h2>๐ ุชูุงูููุง! ููุฏ ุฃูููุช ุงูุฑุญูุฉ ๐</h2>
                <p>ููุฏ ุฃุซุจุชุช ุจุฑุงุนุฉ ุงุณุชุซูุงุฆูุฉ ูู ุญู ุงูุฃูุบุงุฒ!</p>
                <p>ูุณุชูุงู ุงูููุงุฆู: <span class="level">${curator.playerLevel}</span> / 3</p>
                <div class="stats">
                    <p>ุนุฏุฏ ุงูุชูููุญุงุช ุงููุณุชุฎุฏูุฉ: ${curator.hintCount}</p>
                    <p>ุฏูุฉ ุงูุฅุฌุงุจุงุช: ${Math.round((curator.playerLevel / 3) * 100)}%</p>
                </div>
                <button onclick="restartGame()">ุงุจุฏุฃ ุฑุญูุฉ ุฌุฏูุฏุฉ</button>
            </div>
        `;
    }
}

const puzzleSystem = new PuzzleSystem();
